{
  "extension.name": "Conventional Commits",
  "extension.configuration.properties.conventionalCommits.autoCommit.markdownDescription": "Controls whether the extension should automatically commit files.\n\n*Enable `Settings > git.enableSmartCommit` and set `Settings > git.smartCommitChanges` to `all` to commit all changes when there are no staged changes.*\n\n*Set `Settings > git.postCommitCommand` to `sync` to run `git.sync` after commit.*",
  "extension.configuration.properties.conventionalCommits.gitmoji.markdownDescription": "Controls whether the extension should prompt for an gitmoji.",
  "extension.configuration.properties.conventionalCommits.emojiFormat.markdownEnumDescriptions.code": "Display as `:bug:`",
  "extension.configuration.properties.conventionalCommits.emojiFormat.markdownEnumDescriptions.emoji": "Display as `üêõ`",
  "extension.configuration.properties.conventionalCommits.scopes.markdownDescription": "Available scopes.",
  "extension.configuration.properties.conventionalCommits.lineBreak.markdownDescription": "Treat words as line breaks.\n\nBlank means no line breaks.",
  "extension.configuration.properties.conventionalCommits.showEditor.markdownDescription": "Show the commit message as a text document in a separate tab.",
  "extension.sources.repositoryNotFoundInPath": "Repository not found in path: ",
  "extension.sources.repositoriesEmpty": "Please open a repository.",
  "extension.sources.promptRepositoryPlaceholder": "Choose a repository",
  "extension.sources.vscodeGitNotFound": "vscode.git is not enabled.",
  "extension.sources.prompt.fromWorkspaceConfiguration": "From workspace configuration.",
  "extension.sources.prompt.type.placeholder": "Select the type of change that you're committing.",
  "extension.sources.prompt.type.fromCommitlintConfig": "From commitlint config.",
  "extension.sources.prompt.scope.placeholder": "Select the scope of this change.",
  "extension.sources.prompt.scope.noneItem.label": "None",
  "extension.sources.prompt.scope.noneItem.detail": "No scope.",
  "extension.sources.prompt.scope.newItem.label": "New scope",
  "extension.sources.prompt.scope.newItem.detail": "Add a new workspace scope. (You can manage scopes in workspace `settings.json`.)",
  "extension.sources.prompt.scope.newItem.placeholder": "Create a new scope.",
  "extension.sources.prompt.scope.newItemWithoutSetting.label": "New scope (only use once)",
  "extension.sources.prompt.scope.newItemWithoutSetting.detail": "Use a new scope. (The scope will not be added in workspace `settings.json`.)",
  "extension.sources.prompt.gitmoji.placeholder": "Choose a gitmoji.",
  "extension.sources.prompt.gitmoji.noneItem.label": "None",
  "extension.sources.prompt.gitmoji.noneItem.detail": "No gitmoji.",
  "extension.sources.prompt.subject.placeholder": "Write a short, imperative tense description of the change.",
  "extension.sources.prompt.subject.error.including": "including ",
  "extension.sources.prompt.subject.error.type": "type: ",
  "extension.sources.prompt.subject.error.scope": "scope: ",
  "extension.sources.prompt.subject.error.gitmoji": "gitmoji: ",
  "extension.sources.prompt.body.placeholder": "Provide a longer description of the change.",
  "extension.sources.prompt.footer.placeholder": "List any breaking changes or issues closed by this change."
}
